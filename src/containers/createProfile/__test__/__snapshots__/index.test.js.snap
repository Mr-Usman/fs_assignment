// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Edit /> Component mountung the component 1`] = `
<MemoryRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "80pyod",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "80pyod",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <CreateProfile
      history={
        Object {
          "push": [MockFunction],
        }
      }
      location={
        Object {
          "state": Object {
            "user": Object {
              "email": "",
            },
          },
        }
      }
      role="manager"
    >
      <withRouter(Navigationbar)
        role="manager"
      >
        <Navigationbar
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "key": "80pyod",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "key": "80pyod",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "key": "80pyod",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          role="manager"
        >
          <Navbar
            bg="light"
            collapseOnSelect={false}
            expand="lg"
            variant="light"
          >
            <nav
              className="navbar navbar-expand-lg navbar-light bg-light"
            >
              <NavbarBrand
                onClick={[Function]}
              >
                <span
                  className="navbar-brand"
                  onClick={[Function]}
                >
                  Employee Management System
                </span>
              </NavbarBrand>
              <NavbarToggle
                aria-controls="basic-navbar-nav"
                label="Toggle navigation"
              >
                <button
                  aria-controls="basic-navbar-nav"
                  aria-label="Toggle navigation"
                  className="navbar-toggler collapsed"
                  onClick={[Function]}
                  type="button"
                >
                  <span
                    className="navbar-toggler-icon"
                  />
                </button>
              </NavbarToggle>
              <NavbarCollapse
                id="basic-navbar-nav"
              >
                <Collapse
                  appear={false}
                  dimension="height"
                  getDimensionValue={[Function]}
                  id="basic-navbar-nav"
                  in={false}
                  mountOnEnter={false}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <Transition
                    addEndListener={[Function]}
                    appear={false}
                    aria-expanded={null}
                    enter={true}
                    exit={true}
                    id="basic-navbar-nav"
                    in={false}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <div
                      aria-expanded={null}
                      className="navbar-collapse collapse"
                      id="basic-navbar-nav"
                    >
                      <Nav
                        className="mr-auto"
                        fill={false}
                        justify={false}
                      >
                        <ForwardRef
                          as="div"
                          className="mr-auto navbar-nav"
                          onSelect={[Function]}
                        >
                          <div
                            className="mr-auto navbar-nav"
                            onKeyDown={[Function]}
                          >
                            <BrowserRouter>
                              <Router
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "createHref": [Function],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "blank",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                              >
                                <Link
                                  onClick={[Function]}
                                  to="/createprofile"
                                >
                                  <LinkAnchor
                                    href="/createprofile"
                                    navigate={[Function]}
                                    onClick={[Function]}
                                  >
                                    <a
                                      href="/createprofile"
                                      onClick={[Function]}
                                    >
                                      Add Developer
                                    </a>
                                  </LinkAnchor>
                                </Link>
                                <Link
                                  onClick={[Function]}
                                  to="/alldevelopers"
                                >
                                  <LinkAnchor
                                    href="/alldevelopers"
                                    navigate={[Function]}
                                    onClick={[Function]}
                                  >
                                    <a
                                      href="/alldevelopers"
                                      onClick={[Function]}
                                    >
                                      All Developer
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </Router>
                            </BrowserRouter>
                          </div>
                        </ForwardRef>
                      </Nav>
                      <Nav
                        fill={false}
                        justify={false}
                      >
                        <ForwardRef
                          as="div"
                          className="navbar-nav"
                          onSelect={[Function]}
                        >
                          <div
                            className="navbar-nav"
                            onKeyDown={[Function]}
                          >
                            <Button
                              active={false}
                              disabled={false}
                              onClick={[Function]}
                              type="button"
                              variant="outline-info"
                            >
                              <button
                                className="btn btn-outline-info"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                              >
                                Logout
                              </button>
                            </Button>
                          </div>
                        </ForwardRef>
                      </Nav>
                    </div>
                  </Transition>
                </Collapse>
              </NavbarCollapse>
            </nav>
          </Navbar>
        </Navigationbar>
      </withRouter(Navigationbar)>
      <styled.div>
        <div
          className="sc-AxiKw gA-drMl"
        >
          <styled.h1>
            <h1
              className="sc-AxhCb jQvLNr"
            >
              Create a New User
            </h1>
          </styled.h1>
          <Form
            inline={false}
            onSubmit={[Function]}
          >
            <form
              className=""
              onSubmit={[Function]}
            >
              <Row
                noGutters={false}
              >
                <div
                  className="row"
                >
                  <Col
                    md={2}
                  >
                    <div
                      className="col-md-2"
                    />
                  </Col>
                  <Col
                    md={4}
                  >
                    <div
                      className="col-md-4"
                    >
                      <FormGroup>
                        <div
                          className="form-group"
                        >
                          <FormLabel
                            column={false}
                            srOnly={false}
                          >
                            <label
                              className="form-label"
                            >
                              Email
                            </label>
                          </FormLabel>
                          <FormControl
                            data-testid="email"
                            name="email"
                            onChange={[Function]}
                            type="email"
                            value=""
                          >
                            <input
                              className="form-control"
                              data-testid="email"
                              name="email"
                              onChange={[Function]}
                              type="email"
                              value=""
                            />
                          </FormControl>
                        </div>
                      </FormGroup>
                    </div>
                  </Col>
                  <Col
                    md={4}
                  >
                    <div
                      className="col-md-4"
                    >
                      <FormGroup>
                        <div
                          className="form-group"
                        >
                          <FormLabel
                            column={false}
                            srOnly={false}
                          >
                            <label
                              className="form-label"
                            >
                              Password
                            </label>
                          </FormLabel>
                          <FormControl
                            data-testid="password"
                            name="password"
                            onChange={[Function]}
                            type="password"
                            value=""
                          >
                            <input
                              className="form-control"
                              data-testid="password"
                              name="password"
                              onChange={[Function]}
                              type="password"
                              value=""
                            />
                          </FormControl>
                        </div>
                      </FormGroup>
                    </div>
                  </Col>
                  <Col
                    md={2}
                  >
                    <div
                      className="col-md-2"
                    />
                  </Col>
                </div>
              </Row>
              <Row
                noGutters={false}
              >
                <div
                  className="row"
                >
                  <Col
                    md={2}
                  >
                    <div
                      className="col-md-2"
                    />
                  </Col>
                  <Col
                    md={4}
                  >
                    <div
                      className="col-md-4"
                    >
                      <FormGroup>
                        <div
                          className="form-group"
                        >
                          <FormLabel
                            column={false}
                            srOnly={false}
                          >
                            <label
                              className="form-label"
                            >
                              Select Role
                            </label>
                          </FormLabel>
                          <FormControl
                            as="select"
                            data-testid="role"
                            onChange={[Function]}
                          >
                            <select
                              className="form-control"
                              data-testid="role"
                              onChange={[Function]}
                            >
                              <option>
                                role
                              </option>
                              <option
                                value="admin"
                              >
                                admin
                              </option>
                              <option
                                value="manager"
                              >
                                manager
                              </option>
                              <option
                                value="developer"
                              >
                                developer
                              </option>
                            </select>
                          </FormControl>
                        </div>
                      </FormGroup>
                    </div>
                  </Col>
                  <Col
                    md={4}
                  >
                    <div
                      className="col-md-4"
                    >
                      <FormGroup>
                        <div
                          className="form-group"
                        >
                          <FormLabel
                            column={false}
                            srOnly={false}
                          >
                            <label
                              className="form-label"
                            >
                              Permissions
                            </label>
                          </FormLabel>
                          <FormGroup>
                            <div
                              className="form-group"
                            >
                              <FormCheck
                                disabled={false}
                                inline={true}
                                isInvalid={false}
                                isValid={false}
                                label="Create"
                                name="create"
                                onChange={[Function]}
                                title=""
                                type="checkbox"
                              >
                                <div
                                  className="form-check form-check-inline"
                                >
                                  <FormCheckInput
                                    as="input"
                                    disabled={false}
                                    isInvalid={false}
                                    isStatic={false}
                                    isValid={false}
                                    name="create"
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <input
                                      className="form-check-input"
                                      disabled={false}
                                      name="create"
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </FormCheckInput>
                                  <FormCheckLabel
                                    title=""
                                  >
                                    <label
                                      className="form-check-label"
                                      title=""
                                    >
                                      Create
                                    </label>
                                  </FormCheckLabel>
                                </div>
                              </FormCheck>
                              <FormCheck
                                disabled={false}
                                inline={true}
                                isInvalid={false}
                                isValid={false}
                                label="Read"
                                name="read"
                                onChange={[Function]}
                                title=""
                                type="checkbox"
                              >
                                <div
                                  className="form-check form-check-inline"
                                >
                                  <FormCheckInput
                                    as="input"
                                    disabled={false}
                                    isInvalid={false}
                                    isStatic={false}
                                    isValid={false}
                                    name="read"
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <input
                                      className="form-check-input"
                                      disabled={false}
                                      name="read"
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </FormCheckInput>
                                  <FormCheckLabel
                                    title=""
                                  >
                                    <label
                                      className="form-check-label"
                                      title=""
                                    >
                                      Read
                                    </label>
                                  </FormCheckLabel>
                                </div>
                              </FormCheck>
                              <FormCheck
                                disabled={false}
                                inline={true}
                                isInvalid={false}
                                isValid={false}
                                label="Update"
                                name="update"
                                onChange={[Function]}
                                title=""
                                type="checkbox"
                              >
                                <div
                                  className="form-check form-check-inline"
                                >
                                  <FormCheckInput
                                    as="input"
                                    disabled={false}
                                    isInvalid={false}
                                    isStatic={false}
                                    isValid={false}
                                    name="update"
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <input
                                      className="form-check-input"
                                      disabled={false}
                                      name="update"
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </FormCheckInput>
                                  <FormCheckLabel
                                    title=""
                                  >
                                    <label
                                      className="form-check-label"
                                      title=""
                                    >
                                      Update
                                    </label>
                                  </FormCheckLabel>
                                </div>
                              </FormCheck>
                              <FormCheck
                                disabled={false}
                                inline={true}
                                isInvalid={false}
                                isValid={false}
                                label="Delete"
                                name="delete"
                                onChange={[Function]}
                                title=""
                                type="checkbox"
                              >
                                <div
                                  className="form-check form-check-inline"
                                >
                                  <FormCheckInput
                                    as="input"
                                    disabled={false}
                                    isInvalid={false}
                                    isStatic={false}
                                    isValid={false}
                                    name="delete"
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <input
                                      className="form-check-input"
                                      disabled={false}
                                      name="delete"
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </FormCheckInput>
                                  <FormCheckLabel
                                    title=""
                                  >
                                    <label
                                      className="form-check-label"
                                      title=""
                                    >
                                      Delete
                                    </label>
                                  </FormCheckLabel>
                                </div>
                              </FormCheck>
                            </div>
                          </FormGroup>
                        </div>
                      </FormGroup>
                    </div>
                  </Col>
                  <Col
                    md={2}
                  >
                    <div
                      className="col-md-2"
                    />
                  </Col>
                </div>
              </Row>
              <Row
                noGutters={false}
              >
                <div
                  className="row"
                >
                  <Col
                    md={2}
                  >
                    <div
                      className="col-md-2"
                    />
                  </Col>
                  <Col
                    md={8}
                  >
                    <div
                      className="col-md-8"
                    >
                      <FormGroup>
                        <div
                          className="form-group"
                        >
                          <Button
                            active={false}
                            disabled={false}
                            type="submit"
                            variant="primary"
                          >
                            <button
                              className="btn btn-primary"
                              disabled={false}
                              type="submit"
                            >
                              Create User
                            </button>
                          </Button>
                        </div>
                      </FormGroup>
                    </div>
                  </Col>
                  <Col
                    md={2}
                  >
                    <div
                      className="col-md-2"
                    />
                  </Col>
                </div>
              </Row>
              <Row
                noGutters={false}
              >
                <div
                  className="row"
                >
                  <Col
                    md={2}
                  >
                    <div
                      className="col-md-2"
                    />
                  </Col>
                  <Col
                    md={8}
                  >
                    <div
                      className="col-md-8"
                    />
                  </Col>
                  <Col
                    md={2}
                  >
                    <div
                      className="col-md-2"
                    />
                  </Col>
                </div>
              </Row>
            </form>
          </Form>
        </div>
      </styled.div>
    </CreateProfile>
  </Router>
</MemoryRouter>
`;

exports[`<Edit /> Component mountung the component 2`] = `
<MemoryRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "w74r54",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "w74r54",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <CreateProfile
      history={
        Object {
          "push": [MockFunction],
        }
      }
      location={
        Object {
          "state": Object {
            "user": Object {
              "email": "",
            },
          },
        }
      }
      role="developer"
    >
      <NotFound
        role="developer"
      >
        <withRouter(Navigationbar)
          role="developer"
        >
          <Navigationbar
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "w74r54",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "w74r54",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "w74r54",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            role="developer"
          >
            <Navbar
              bg="light"
              collapseOnSelect={false}
              expand="lg"
              fluid={true}
              inverse={true}
              variant="light"
            >
              <nav
                className="navbar navbar-expand-lg navbar-light bg-light"
                fluid={true}
                inverse={true}
              >
                <NavbarBrand
                  onClick={[Function]}
                >
                  <span
                    className="navbar-brand"
                    onClick={[Function]}
                  >
                    Employee Management System
                  </span>
                </NavbarBrand>
                <NavbarToggle
                  aria-controls="basic-navbar-nav"
                  label="Toggle navigation"
                >
                  <button
                    aria-controls="basic-navbar-nav"
                    aria-label="Toggle navigation"
                    className="navbar-toggler collapsed"
                    onClick={[Function]}
                    type="button"
                  >
                    <span
                      className="navbar-toggler-icon"
                    />
                  </button>
                </NavbarToggle>
                <NavbarCollapse
                  id="basic-navbar-nav"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    id="basic-navbar-nav"
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      addEndListener={[Function]}
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      id="basic-navbar-nav"
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="navbar-collapse collapse"
                        id="basic-navbar-nav"
                      >
                        <Nav
                          className="mr-auto"
                          fill={false}
                          justify={false}
                        >
                          <ForwardRef
                            as="div"
                            className="mr-auto navbar-nav"
                            onSelect={[Function]}
                          >
                            <div
                              className="mr-auto navbar-nav"
                              onKeyDown={[Function]}
                            >
                              <BrowserRouter>
                                <Router
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "createHref": [Function],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "blank",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                >
                                  <Link
                                    onClick={[Function]}
                                    to="/tasks"
                                  >
                                    <LinkAnchor
                                      href="/tasks"
                                      navigate={[Function]}
                                      onClick={[Function]}
                                    >
                                      <a
                                        href="/tasks"
                                        onClick={[Function]}
                                      >
                                        Tasks
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                  <Link
                                    onClick={[Function]}
                                    to="/timings"
                                  >
                                    <LinkAnchor
                                      href="/timings"
                                      navigate={[Function]}
                                      onClick={[Function]}
                                    >
                                      <a
                                        href="/timings"
                                        onClick={[Function]}
                                      >
                                        Timings
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                  <Link
                                    onClick={[Function]}
                                    to="/swapshift"
                                  >
                                    <LinkAnchor
                                      href="/swapshift"
                                      navigate={[Function]}
                                      onClick={[Function]}
                                    >
                                      <a
                                        href="/swapshift"
                                        onClick={[Function]}
                                      >
                                        Swap Requests
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                </Router>
                              </BrowserRouter>
                            </div>
                          </ForwardRef>
                        </Nav>
                        <Nav
                          fill={false}
                          justify={false}
                        >
                          <ForwardRef
                            as="div"
                            className="navbar-nav"
                            onSelect={[Function]}
                          >
                            <div
                              className="navbar-nav"
                              onKeyDown={[Function]}
                            >
                              <Button
                                active={false}
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                                variant="outline-info"
                              >
                                <button
                                  className="btn btn-outline-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Logout
                                </button>
                              </Button>
                            </div>
                          </ForwardRef>
                        </Nav>
                      </div>
                    </Transition>
                  </Collapse>
                </NavbarCollapse>
              </nav>
            </Navbar>
          </Navigationbar>
        </withRouter(Navigationbar)>
        <styled.div>
          <div
            className="sc-AxjAm bcThxe"
          >
            <styled.h1>
              <h1
                className="sc-AxirZ kHuMvb"
              >
                Not Found...
              </h1>
            </styled.h1>
          </div>
        </styled.div>
      </NotFound>
    </CreateProfile>
  </Router>
</MemoryRouter>
`;
