// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Task /> Component Tests mounting the component(for unauthorize user) 1`] = `
<MemoryRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "ja1zf5",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "ja1zf5",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Task
      role="manager"
    >
      <NotFound
        role="manager"
      >
        <withRouter(Navigationbar)
          role="manager"
        >
          <Navigationbar
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "ja1zf5",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "ja1zf5",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "ja1zf5",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            role="manager"
          >
            <Navbar
              bg="light"
              collapseOnSelect={false}
              expand="lg"
              variant="light"
            >
              <nav
                className="navbar navbar-expand-lg navbar-light bg-light"
              >
                <NavbarBrand
                  onClick={[Function]}
                >
                  <span
                    className="navbar-brand"
                    onClick={[Function]}
                  >
                    Employee Management System
                  </span>
                </NavbarBrand>
                <NavbarToggle
                  aria-controls="basic-navbar-nav"
                  label="Toggle navigation"
                >
                  <button
                    aria-controls="basic-navbar-nav"
                    aria-label="Toggle navigation"
                    className="navbar-toggler collapsed"
                    onClick={[Function]}
                    type="button"
                  >
                    <span
                      className="navbar-toggler-icon"
                    />
                  </button>
                </NavbarToggle>
                <NavbarCollapse
                  id="basic-navbar-nav"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    id="basic-navbar-nav"
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      addEndListener={[Function]}
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      id="basic-navbar-nav"
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="navbar-collapse collapse"
                        id="basic-navbar-nav"
                      >
                        <Nav
                          className="mr-auto"
                          fill={false}
                          justify={false}
                        >
                          <ForwardRef
                            as="div"
                            className="mr-auto navbar-nav"
                            onSelect={[Function]}
                          >
                            <div
                              className="mr-auto navbar-nav"
                              onKeyDown={[Function]}
                            >
                              <BrowserRouter>
                                <Router
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "createHref": [Function],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "blank",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                >
                                  <Link
                                    onClick={[Function]}
                                    to="/createprofile"
                                  >
                                    <LinkAnchor
                                      href="/createprofile"
                                      navigate={[Function]}
                                      onClick={[Function]}
                                    >
                                      <a
                                        href="/createprofile"
                                        onClick={[Function]}
                                      >
                                        Add Developer
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                  <Link
                                    onClick={[Function]}
                                    to="/alldevelopers"
                                  >
                                    <LinkAnchor
                                      href="/alldevelopers"
                                      navigate={[Function]}
                                      onClick={[Function]}
                                    >
                                      <a
                                        href="/alldevelopers"
                                        onClick={[Function]}
                                      >
                                        All Developer
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                </Router>
                              </BrowserRouter>
                            </div>
                          </ForwardRef>
                        </Nav>
                        <Nav
                          fill={false}
                          justify={false}
                        >
                          <ForwardRef
                            as="div"
                            className="navbar-nav"
                            onSelect={[Function]}
                          >
                            <div
                              className="navbar-nav"
                              onKeyDown={[Function]}
                            >
                              <Button
                                active={false}
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                                variant="outline-info"
                              >
                                <button
                                  className="btn btn-outline-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Logout
                                </button>
                              </Button>
                            </div>
                          </ForwardRef>
                        </Nav>
                      </div>
                    </Transition>
                  </Collapse>
                </NavbarCollapse>
              </nav>
            </Navbar>
          </Navigationbar>
        </withRouter(Navigationbar)>
        <styled.div>
          <div
            className="sc-AxjAm bcThxe"
          >
            <styled.h1>
              <h1
                className="sc-AxirZ kHuMvb"
              >
                Not Found...
              </h1>
            </styled.h1>
          </div>
        </styled.div>
      </NotFound>
    </Task>
  </Router>
</MemoryRouter>
`;
